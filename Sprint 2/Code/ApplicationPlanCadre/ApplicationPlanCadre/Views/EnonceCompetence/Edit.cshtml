@model ApplicationPlanCadre.Models.EnonceCompetence

@{
    ViewBag.Title = "Énoncé de compétence - modification";
}

<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idCompetence)
        @Html.HiddenFor(model => model.idDevis)

        <div class="form-horizontal form-box single-action">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h1>Modifier un énoncé de compétence</h1>

            <hr />

            <div class="champ">
                @Html.ValidationMessage("Duplique", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codeCompetence, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.codeCompetence, new { htmlAttributes = new { @maxlength = "4", @class = "form-control small-input" } })
                    @Html.ValidationMessageFor(model => model.codeCompetence, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.description, new { @rows = "3", @maxlength = "300", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.obligatoire, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.CheckBoxFor(model => model.obligatoire, new { @Checked = "checked" })
                    @Html.ValidationMessageFor(model => model.obligatoire, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.actif, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.actif)
                    @Html.ValidationMessageFor(model => model.actif, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Suivant" class="fancy-button" />
                    <div class="fancy-button rouge" onclick="location.href='@Url.Action("Info", "EnonceCompetence", new { idCompetence = Model.idCompetence })'">Annuler</div>
                </div>
            </div>
        </div>
    }

</div>