@model ApplicationPlanCadre.Models.PlanCadre
@using ApplicationPlanCadre.Models
@using System.Linq;
@{
    ViewBag.Title = "RapportPlanCadre";
    Layout = null;
    string carriageReturnText;
    bool rowspanIndicationPedago = false;
    int idElementConnaissanceHold = 0;
    int idActiviteApprentissageHold = 0;
    int nbCompetence = Model.PlanCadreEnonce.Count();
    int counter = 0;
    int planCadrPrealableHold = 0;

}

<style>

    table, th, td {
        
        border-collapse: collapse;
        font-size: 18px;
        
        

    }
    .td-no-borderTopBot {
        border-top-style: none;
        border-bottom-style: none;
        border-left: 1px solid black;
        border-right: 1px solid black;
    }
    .td-borderTopOnly {
        border-top: 1px solid black;
        border-left: 1px solid black;
        border-right: 1px solid black;
    }
    
    table {
        /*page-break-before: avoid;*/
        width: 100%;
        margin-top: 25px;
        border: 1px solid black;
    }

    tr {
        page-break-inside: avoid;
        page-break-after: auto;
    }

    td {
        page-break-inside: avoid;
        page-break-before: auto;
        vertical-align: top;
    }

    thead {
        display: table-header-group;
        font-weight: bold;
        
    }

    tfoot {
        display: table-footer-group
    }

    div {
        page-break-after: auto
    }
    .divtop{

        width:100%;
        font-size:55px;
    }
    .pdf{
        font-family:Calibri;
        width:100%;
    }
    .entete {
        font-size: 25px;
        font-weight: bold;
    }
    .entete-left {
        display: inline;
        box-sizing: border-box;
        width: 50%;
        float: left;
        margin: 0px;
    }
    .entete-right {
        display: inline;
        box-sizing: border-box;
        width: 50%;
        float: right;
        margin: 0px;
    }
    .inner-left{
        display: inline;
        box-sizing: border-box;
        float: left;
        margin: 0px;
    }
    .inner-right {
        display: inline;
        box-sizing: border-box;
        float: left;
        margin-left:10px;
    }
    .inner2-left {
        display: inline;
        box-sizing: border-box;
        float: right;
        margin-left: 10px;
    }
    .inner2-right {
        display: inline;
        box-sizing: border-box;
        float: right;
        margin: 0px;
    }
    .prealable-right{

    }

    .critere-left {
        display: inline;
        box-sizing: border-box;
        float: left;
        margin: 0px;
        width:4%;
        margin-right:15px;

    }
    .critere-right {
        display: inline;
        box-sizing: border-box;
        margin: 0px;
        float:left;
        width:90%;
    }
    
    
    .corps{
        padding-top:25px;

    }
    .line-prealable{
        margin-top:5px;
        margin-bottom:5px;
    }
#clear {
    clear: both;
}
</style>
<div class="pdf">
            <!-- barre top -->
               
            <div class="divtop">
                @Html.DisplayFor(x => Model.Programme.nom)@*nom programme*@
                <br />
                @Html.DisplayFor(x => Model.Programme.DevisMinistere.specialisation)@*devis specialisation*@
            </div>
            <!-- début de l'entête -->
            <div class="entete">
                <div class="entete-left">
                    <br />

                    <div class="inner-left">
                        Titre du cours :
                        <br />
                        Pondération :
                    </div>
                    <div class="inner-right">
                        @Html.DisplayFor(x => Model.titreCours)@*titre cours*@
                        <br />
                        @Html.DisplayFor(x => Model.nbHeureTheorie) - @Html.DisplayFor(x => Model.nbHeurePratique) - @Html.DisplayFor(x => Model.nbHeureDevoir)
                    </div>
                </div>
                <div class="entete-right">
                    <br />
                    <div class="inner2-left">
                        @Html.DisplayFor(x => Model.numeroCours)
                        <br />
                        @Html.DisplayFor(x => Model.Programme.DevisMinistere.codeProgramme)@*code programme devis*@.@Html.DisplayFor(x => Model.Programme.DevisMinistere.codeSpecialisation)
                    </div>
                    <div class="inner2-right">
                        Numéro du cours :
                        <br />
                        Programme :
                       
                    </div>
                    
                </div>
            </div>
            <div id="clear"></div>
            
           
            <!-- début du corps du plan cadre-->
            <div class="corps">
                <table style="margin-bottom:25px">
                    <thead>
                        <tr>
                            <td class="td-borderTopOnly" style="width:20%;">
                                Objectif - Énoncé des compétences
                            </td>
                            <td class="td-borderTopOnly"style="width:45%;">
                                Standard - Contexte de réalisation
                            </td>
                            <td class="td-borderTopOnly">
                                Indication pédagogiques, s'il y a lieu
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                       
                        @foreach (PlanCadreEnonce a in Model.PlanCadreEnonce)
                        {
                            <tr>
                                 <td class="td-borderTopOnly">
                                      @Html.DisplayFor(x => a.EnonceCompetence.description) (@Html.DisplayFor(x => a.EnonceCompetence.codeCompetence))
                                      <br />
                                      <br />
                                      @Html.DisplayFor(x => a.ponderationEnHeure) heures
                                 </td>
                                        <td class="td-borderTopOnly">
                                            @foreach(ContexteRealisation c in a.EnonceCompetence.ContexteRealisation)
                                            {
                                               
                                                     @Html.Raw("-")@Html.DisplayFor(x => c.description)
                                                    <br />
                                                    <br />
                                             }
                                            
                                        </td>
                                         @if (rowspanIndicationPedago != true)
                                         {
                                            <td rowspan=@Html.Raw(nbCompetence) class="td-borderTopOnly">
                                                @if (ViewData["listPcPrealableA"] != null)
                                                {
                                                    foreach (PlanCadre pc in ViewData["listPcPrealableA"] as List<PlanCadre>)
                                                    {
                                                        foreach (PlanCadrePrealable prealable in pc.PlanCadrePrealable)
                                                        {
                                                            if(planCadrPrealableHold != prealable.idPlanCadre)
                                                            { 
                                                                if(prealable.idStatus == 2)
                                                                {
                                                                    <div class="prealableA">
                                                                        <div class="prealable-left">
                                                                            <div>Préalable absolu à:</div>
                                                                        </div>
                                                                        <div class="prealable-right">
                                                                            <div class="line-prealable">@Html.DisplayFor(x => pc.titreCours) @Html.DisplayFor(x => pc.numeroCours)</div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    if (prealable.idStatus == 1)
                                                                    {
                                                                        <div class="prealableA">
                                                                            <div class="prealable-left">
                                                                                <div>Préalable Relatif à:</div>
                                                                            </div>
                                                                            <div class="prealable-right">
                                                                                <div class="line-prealable">@Html.DisplayFor(x => pc.titreCours) @Html.DisplayFor(x => pc.numeroCours)</div>
                                                                            </div>
                                                                        </div>
                                                                    }

                                                                }
                                                                planCadrPrealableHold = prealable.idPlanCadre;
                                                            }
                                                        }
                                                    }
                                                }
                                                 <div class="clearfix"></div>
                                                  @foreach (PlanCadrePrealable prealable in a.PlanCadre.PlanCadrePrealable)
                                                  {
                                                      if (prealable.idStatus == 2)
                                                      {
                                                        <div class="prealableA">
                                                            <div class="prealable-left">
                                                                <div>Préalable absolu :</div>
                                                            </div>
                                                            <div class="prealable-right">
                                                                <div class="line-prealable">@Html.DisplayFor(x => prealable.Prealable.titreCours) @Html.Raw(" (")@Html.DisplayFor(x => prealable.Prealable.numeroCours)@Html.Raw(")")</div>
                                                            </div>
                                                        </div>
                                                      }
                                                      else
                                                      {
                                                          if (prealable.idStatus == 1)
                                                          {
                                                            <div class="prealableA">
                                                                <div class="prealable-left">
                                                                    <div>Préalable relatif :</div>
                                                                </div>
                                                                <div class="prealable-right">
                                                                    <div class="line-prealable">@Html.DisplayFor(x => prealable.Prealable.titreCours) @Html.Raw(" (")@Html.DisplayFor(x => prealable.Prealable.numeroCours)@Html.Raw(")")</div>
                                                                </div>
                                                            </div>
                                                          }
                                                      }
                                                  }


                                                  @Html.DisplayFor(x => Model.indicationPedago)
                                            </td>
                                             rowspanIndicationPedago = true;
                                         }
                                    </tr>
                         }
                      </tbody>
                </table>
                
    @foreach (PlanCadreEnonce a in Model.PlanCadreEnonce)
    {
                <!-- Affichage en boucle des tableau des ennoncer compétence-->
                
                    <div style="margin-top:50px;">
                        <table>
                            <thead>
                                <tr>
                                    <td colspan="4" class="td-borderTopOnly">
                                        @Html.DisplayFor(x => a.EnonceCompetence.description) (@Html.DisplayFor(x => a.EnonceCompetence.codeCompetence))
                                    </td>
                                </tr>
                                <tr>
                                    <td class="td-borderTopOnly">
                                        Les éléments de compétence
                                    </td>
                                    <td class="td-borderTopOnly">
                                        Critères de performance
                                    </td>
                                    <td class="td-borderTopOnly">
                                        Éléments de connaissances
                                    </td>
                                    <td class="td-borderTopOnly">
                                        Activités d'apprentissage suggérées
                                    </td>
                                </tr>
                            </thead>
                            <tbody>
                               
                                @foreach (PlanCadreElement element in a.PlanCadre.PlanCadreElement)
                                {
                                    if(a.EnonceCompetence.idCompetence == element.ElementCompetence.idCompetence)
                                    { 
                                        <tr>
                                            <td width="20%" class="td-borderTopOnly">
                                                @Html.DisplayFor(x => element.ElementCompetence.numero)<span>. </span>@Html.DisplayFor(x => element.ElementCompetence.description)
                                                <br />
                                            </td>
                                            <td width="25%" class="td-borderTopOnly">

                                                @foreach (CriterePerformance criterePerf in element.ElementCompetence.CriterePerformance)
                                                {
                                                    if (element.idElement == criterePerf.idElement)
                                                    {
                                                        <div style="margin-top:15px;">
                                                            <div class="critere-left">
                                                                @Html.DisplayFor(x => element.ElementCompetence.numero)<span>.</span>@Html.DisplayFor(x => criterePerf.numero)
                                                            </div>
                                                            <div class="critere-right">
                                                                @Html.DisplayFor(x => criterePerf.description)
                                                            </div>
                                                            <div id="clear"></div>
                                                        </div>
                                                    }
                                                }
                                                </td>
                                                @*si element connaissance et pareille a celui d'en haut *@
                                                 @if(idElementConnaissanceHold == element.ElementConnaissance.idElementConnaissance)
                                                 {
                                                     <td class="td-no-borderTopBot"><!--Empty--></td>
                                                 }
                                                 else
                                                 {
                                                    <td class="td-borderTopOnly">@Html.Raw(element.ElementConnaissance.description)</td>
                                                     idElementConnaissanceHold = element.ElementConnaissance.idElementConnaissance;
                                                 }
                                                
                                                @*si activiteApprentissage et pareille a celui d'en haut *@
                                                @if (idActiviteApprentissageHold == element.ElementConnaissance.ActiviteApprentissage.idActiviteApprentissage)
                                                {
                                                    <td class="td-no-borderTopBot"><!--Empty--></td>
                                                }
                                                else
                                                {
                                                    
                                                    <td class="td-borderTopOnly">
                                                         @Html.Raw(element.ElementConnaissance.ActiviteApprentissage.description)
                                                    </td>
                                                    idActiviteApprentissageHold = element.ElementConnaissance.ActiviteApprentissage.idActiviteApprentissage;

                                                }

                                        </tr>
                                    }
                                }
                                
                            </tbody>
                        </table>
                    </div>
       
    }
            <table>
                <thead>
                    <tr>
                        <td class="td-borderTopOnly">
                            Environement physique
                        </td>
                        <td class="td-borderTopOnly">
                            Ressources didactiques suggérées
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td width="45%" class="td-borderTopOnly">
                           @Html.Raw(Model.environnementPhys)
                            
                        </td>
                        <td class="td-borderTopOnly">
                           
                            @Html.Raw(Model.ressource)
                        </td>
                    </tr>
                </tbody>
            </table>
       </div>
</div>




