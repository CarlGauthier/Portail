@model ApplicationPlanCadre.Models.PlanCadre
@{
    ViewBag.Title = "PlanCadre";
    bool rowspanDone = false;
}
<style>
    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
        font-size: 15px;
    }

    table {
        page-break-before: auto;
        width: 100%;
        margin-top: 25px;
    }

    tr {
        page-break-inside: avoid;
        page-break-after: always;
    }

    td {
        page-break-inside: avoid;
        page-break-before: auto
    }

    thead {
        display: table-header-group;
        font-weight: bold;
        background-color: rgba(87, 85, 91, 0.5);
    }

    tfoot {
        display: table-footer-group
    }

    div {
        page-break-after: auto
    }

    .divtop {
        width: 100%;
        background-color: red;
    }

    .pdf {
        width: 100%;
    }

    .entete {
        font-size: 25px;
        font-weight: bold;
    }

    .entete-left {
        display: inline;
        box-sizing: border-box;
        width: 50%;
        float: left;
        margin: 0px;
    }

    .entete-right {
        display: inline;
        box-sizing: border-box;
        width: 50%;
        float: right;
        margin: 0px;
    }

    .inner-left {
        display: inline;
        box-sizing: border-box;
        float: left;
        margin: 0px;
    }

    .inner-right {
        display: inline;
        box-sizing: border-box;
        float: left;
        margin-left: 10px;
    }

    .inner2-left {
        display: inline;
        box-sizing: border-box;
        float: right;
        margin-left: 10px;
    }

    .inner2-right {
        display: inline;
        box-sizing: border-box;
        float: right;
        margin: 0px;
    }

    .critere-left {
        display: inline;
        box-sizing: border-box;
        float: left;
        margin: 0px;
        width: 4%;
        margin-right: 15px;
    }

    .critere-right {
        display: inline;
        box-sizing: border-box;
        margin: 0px;
        float: left;
        width: 90%;
    }


    .corps {
        padding-top: 25px;
    }

    #clear {
        clear: both;
    }
</style>

<div id="super-view">
    @Html.Action("_TreeView", "Programme")

    <div id="info-display" class="container-fluid">
        <div class="pdf">
            <!-- barre top -->

            <div class="divtop">
                @Html.DisplayFor(x => Model.Programme.nom)
                <br />
                @Html.DisplayFor(x => Model.Programme.DevisMinistere.specialisation)
            </div>
            <!-- début de l'entête -->
            <div class="entete">
                <div class="entete-left">
                    <br />

                    <div class="inner-left">
                        Titre du cours :
                        <br />
                        Pondération :
                    </div>
                    <div class="inner-right">
                        @Html.DisplayFor(x => Model.titreCours)
                        <br />
                        @Html.DisplayFor(x => Model.nbHeureTheorie) - @Html.DisplayFor(x => Model.nbHeurePratique) - @Html.DisplayFor(x => Model.nbHeureDevoir)
                    </div>
                </div>
                <div class="entete-right">
                    <br />
                    <div class="inner2-left">
                        @Html.DisplayFor(x => Model.numeroCours)
                        <br />
                        @Html.DisplayFor(x => Model.Programme.DevisMinistere.codeProgramme).@Html.DisplayFor(x => Model.Programme.DevisMinistere.codeSpecialisation)
                    </div>
                    <div class="inner2-right">
                        Numéro du cours :
                        <br />
                        Programme :

                    </div>

                </div>
            </div>
            <div id="clear"></div>


            <!-- début du corps du plan cadre-->
            <div class="corps">
                <table>
                    <thead>
                        <tr>
                            <td style="width:20%;">
                                Objectif - Énoncé des compétences
                            </td>
                            <td style="width:45%;">
                                Standard - Contexte de réalisation
                            </td>
                            <td>
                                Indication pédagogiques, s'il y a lieu
                            </td>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var planCadreEnonce in Model.PlanCadreEnonce)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(x => planCadreEnonce.EnonceCompetence.description) (@Html.DisplayFor(x => planCadreEnonce.EnonceCompetence.codeCompetence))
                                    <br />
                                    <br />
                                    @Html.DisplayFor(x => planCadreEnonce.ponderationEnHeure) heures
                                </td>
                                <td>
                                    @foreach (var contexteRealisation in planCadreEnonce.EnonceCompetence.ContexteRealisation)
                                    {

                                        @Html.Raw("-")@Html.DisplayFor(x => contexteRealisation.description)
                                        <br />
                                                    <br />
                                    }

                                </td>
                            </tr>
                        }

                    </tbody>
                </table>

                @foreach (var planCadreEnonce in Model.PlanCadreEnonce)
                {
                <!-- Affichage en boucle des tableau des ennoncer compétence-->
                    <div style="margin-top:50px;">
                        <table>
                            <thead>
                                <tr>
                                    <td colspan="4">
                                        @Html.DisplayFor(x => planCadreEnonce.EnonceCompetence.description) (@Html.DisplayFor(x => planCadreEnonce.EnonceCompetence.codeCompetence))
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Les éléments de compétence
                                    </td>
                                    <td>
                                        Critères de performance
                                    </td>
                                    <td>
                                        Éléments de connaissances
                                    </td>
                                    <td>
                                        Activités d'apprentissage suggérées
                                    </td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var planCadreElement in Model.PlanCadreElement.Where(m => m.ElementCompetence.EnonceCompetence.idCompetence == planCadreEnonce.idCompetence))
                                {
                                    //if (b.idCompetence == elementCompt.idCompetence)
                                    //{
                                    <tr>
                                        <td width="25%">
                                            @Html.DisplayFor(x => planCadreElement.ElementCompetence.numero)<span>. </span>@Html.DisplayFor(x => planCadreElement.ElementCompetence.description)
                                            <br />
                                        </td>
                                        <td width="35%">

                                            @foreach (var criterePerformance in planCadreElement.ElementCompetence.CriterePerformance)
                                            {
                                                if (planCadreElement.ElementCompetence.idElement == criterePerformance.idElement)
                                                {

                                                    <div style="margin-top:15px;">
                                                        <div class="critere-left">
                                                            @Html.DisplayFor(x => planCadreElement.ElementCompetence.numero)<span>.</span>@Html.DisplayFor(x => criterePerformance.numero)
                                                        </div>
                                                        <div class="critere-right">
                                                            @Html.DisplayFor(x => criterePerformance.description)
                                                        </div>
                                                        <div id="clear"></div>
                                                    </div>
                                                }
                                            }

                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>

                }
            </div>
        </div>

        <hr />

        <h1>Modification</h1>
        <a class="fancy-button"@* href='@Url.Action("Edit", new { id = Model.idDevis })'*@><span class="glyphicon glyphicon-pencil"><!----></span> Modifier</a>
        <a class="fancy-button" @*onclick="location.href='@Url.Action("Delete", new { idCompetence = Model.idCompetence })'"*@><span class="glyphicon glyphicon-trash"><!----></span> Supprimer</a>
        <a class="fancy-button rouge" onclick="location.href='@Url.Action("Info", "Programme", new { idProgramme = Model.idProgramme })'">Retour</a>

    </div>
</div>

