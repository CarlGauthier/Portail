@model ApplicationPlanCadre.Models.Programme

@{
    ViewBag.Title = "Edit";
}

<div class="container">

    <div class="jumbotron">
        <h1>@Html.DisplayFor(model => model.nom)</h1>
        <h2>Spécialisation : @Html.DisplayFor(model => model.specialisation)</h2>
        <h3>code : @Html.DisplayFor(model => model.codeProgramme)-@Html.DisplayFor(model => model.annee)-@Html.DisplayFor(model => model.codeSpecialisation)</h3>
    </div>

    <h2>Modifications des informations </h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idProgramme)
            @Html.HiddenFor(model => model.codeProgramme)<!-- Necessaire ? A VÉRIFIER-->
            @Html.HiddenFor(model => model.annee)<!-- Necessaire ? A VÉRIFIER-->
            @Html.HiddenFor(model => model.codeSpecialisation)<!-- Necessaire ? A VÉRIFIER-->
            @Html.HiddenFor(model => model.dateValidation)
            @Html.HiddenFor(model => model.docMinistere_path)

            <!---->
            <div class="col-md-6">
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.nom)
                    <div>
                        @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return (!(event.keyCode >= 48 && event.keyCode <= 57));" } })
                        @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.specialisation)
                    <div>
                        @Html.EditorFor(model => model.specialisation, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return (!(event.keyCode >= 48 && event.keyCode <= 57));" } })
                        @Html.ValidationMessageFor(model => model.specialisation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.sanction)
                    <div>
                        @Html.EditorFor(model => model.sanction, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return (!(event.keyCode >= 48 && event.keyCode <= 57));" } })
                        @Html.ValidationMessageFor(model => model.sanction, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.nbUnite)
                    <div>
                        @Html.EditorFor(model => model.nbUnite, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nbUnite, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.condition)
                    <div>
                        @Html.EditorFor(model => model.condition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.condition, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.nbHeurefrmGenerale)
                    <div>
                        @Html.EditorFor(model => model.nbHeurefrmGenerale, new { htmlAttributes = new { @class = "form-control", @maxlength = "4", @onkeydown = "return (!(event.keyCode>=65) && event.keyCode!=32);" } })
                        @Html.ValidationMessageFor(model => model.nbHeurefrmGenerale, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.nbHeurefrmSpecifique)
                    <div>
                        @Html.EditorFor(model => model.nbHeurefrmSpecifique, new { htmlAttributes = new { @class = "form-control", @maxlength = "4", @onkeydown = "return (!(event.keyCode>=65) && event.keyCode!=32);" } })
                        @Html.ValidationMessageFor(model => model.nbHeurefrmSpecifique, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.docMinistere_path)
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.DisplayFor(model => model.docMinistere_path) .pdf
                        </div>
                        <div class="col-md-4">
                            <input type="button" value="Modifier" onclick="location.href='@Url.Action("UploadFile", "Programme",  new { type = "file" })'" />
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Enregistrer" />
                    <div class="fancy-button cancel" onclick="location.href='@Url.Action("Index")'">Annuler</div>
                </div>
            </div>

        </div>
    }

</div>