@model programmeBDDevCF.Models.Programme

@{
    ViewBag.Title = "Edit";
}



<div class="jumbotron">
    <h1>@Html.DisplayFor(model => model.nom)</h1>
    <h2>Spécialisation : @Html.DisplayFor(model => model.specialisation)</h2>
    <h3>code : @Html.DisplayFor(model => model.codeProgramme)-@Html.DisplayFor(model => model.annee)-@Html.DisplayFor(model => model.codeSpecialisation)</h3>
</div>

<h2>Modifications des informations </h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codeProgramme)

        <div class="invisible">
            <div class="form-group">
                @Html.LabelFor(model => model.codeProgramme, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.codeProgramme, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.codeProgramme, "", new { @class = "text-danger" })

                    <!--@Html.DisplayFor(model => model.codeProgramme, new { htmlAttributes = new { @class = "form-control" } })-->
                </div>
            </div>

            <!-- Test **************************************************************************************************************************************** -->
            <div class="form-group">
                @Html.LabelFor(model => model.dateValidation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.dateValidation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateValidation, "", new { @class = "text-danger" })

                    <!--@Html.DisplayFor(model => model.dateValidation, new { htmlAttributes = new { @class = "form-control" } })-->
                </div>
            </div>
            <!-- Test **************************************************************************************************************************************** -->

            <div class="form-group">
                @Html.LabelFor(model => model.annee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.annee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.annee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codeSpecialisation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.codeSpecialisation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.codeSpecialisation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.specialisation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.specialisation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.specialisation, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.commentaire, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.commentaire, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.commentaire, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>



        <!---->
        <div class="col-md-6">
            <div class="form-group">
                <label for="code">Type de sanction : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sanction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sanction, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>Nombre d'unité : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nbUnite, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nbUnite, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>Conditions particulières : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.condition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.condition, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Formation générale : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nbHeurefrmGenerale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nbHeurefrmGenerale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Formation spécifique : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nbHeurefrmSpecifique, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nbHeurefrmSpecifique, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>Document du ministère : </label>
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.docMinistere_path, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.docMinistere_path, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.docMinistere_path) .pdf
                    </div>
                    <div class="col-md-4">
                        <input type="button" class="btn btn-info" value="Modifier" onclick="location.href='@Url.Action("UploadFile", "Programme",  new { type = "file" })'" />
                    </div>

                </div>

                <!--
                <div class="row">
                    <div class="col-md-4">

                        <input type="file" id="fileLoader" name="files" title="Load File" />
                        <asp:Button ID="LoginButton" runat="server" Text="ASP click Me" onclientclick="openfileDialog()" />
                    </div>
                    <div class="col-md-4">
                        <input type="button" class="btn btn-info" value="Télécharger" onclick="location.href='@Url.Action("UploadFile", "tblProgrammes",  new { type = "file" })'" />

                    </div>
                </div>
                -->
                <!--
                @using (Html.BeginForm("UploadFile", "tblProgrammes", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    <div>
                        @Html.TextBox("file", "", new { type = "file" }) <br />


                       <input type="button" class="btn btn-info" value="Télécharger2" onclick="location.href='@Url.Action("UploadFile", "tblProgrammes", new { enctype = "multipart/form-data" })'" />

                        @ViewBag.Message

                    </div>

                }
                -->
                <!-- Exemple de lien fonctionnel
                @Html.ActionLink("Sauver", "EditPath", new { id = Model.codeProgramme })
                Esmple de bouton fonctionnel
                <input type="button" class="btn btn-info" value="Un bouton!" onclick="location.href='@Url.Action("Sauver", "EditPath")'" />
                -->
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">

            </div>
            <div class="col-md-4">

            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Enregistrer" class="btn btn-danger" />
                    </div>
                </div>

            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}














<!-- 
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Programme</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idProgramme)

        <div class="form-group">
            @Html.LabelFor(model => model.annee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.annee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.annee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nbUnite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nbUnite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbUnite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codeSpecialisation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codeSpecialisation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codeSpecialisation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.specialisation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.specialisation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.specialisation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nbHeurefrmGenerale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nbHeurefrmGenerale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbHeurefrmGenerale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nbHeurefrmSpecifique, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nbHeurefrmSpecifique, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbHeurefrmSpecifique, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.condition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.condition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sanction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sanction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sanction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.commentaire, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.commentaire, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.commentaire, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.docMinistere_path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.docMinistere_path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.docMinistere_path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codeProgramme, "codeProgramme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codeProgramme", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codeProgramme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



-->

<!-- "idProgramme,annee,nom,nbUnite,codeSpecialisation,specialisation,nbHeurefrmGenerale,nbHeurefrmSpecifique,condition,sanction,commentaire,docMinistere_path,dateValidation,idCodeProgramme")-->